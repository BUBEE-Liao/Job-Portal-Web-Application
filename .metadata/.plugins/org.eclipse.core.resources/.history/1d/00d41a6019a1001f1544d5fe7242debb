package com.bubee.jobportal.services;

import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bubee.jobportal.entity.JobSeekerProfile;
import com.bubee.jobportal.entity.RecruiterProfile;
import com.bubee.jobportal.entity.Users;
import com.bubee.jobportal.repository.JobSeekerRepository;
import com.bubee.jobportal.repository.RecruiterProfileRepository;
import com.bubee.jobportal.repository.UsersRepository;

@Service
public class UsersService {

	private final UsersRepository usersRepository;
	private final JobSeekerRepository jobSeekerRepository;
	private final RecruiterProfileRepository recruiterProfileRepository;
	
	@Autowired
	public UsersService(UsersRepository usersRepository, 
			JobSeekerRepository jobSeekerRepository, RecruiterProfileRepository recruiterProfileRepository) {
		this.usersRepository = usersRepository;
		this.jobSeekerRepository = jobSeekerRepository;
		this.recruiterProfileRepository = recruiterProfileRepository;
	}
	
	public Users addNew(Users users) {
		users.setActive(true);
		users.setRegistrationDate(new Date(System.currentTimeMillis()));
		// we need to save it first before we pass it into those other methods
		users = usersRepository.save(users);
		int userTypeId = users.getUserTypeId().getUserTypeId();
		if( userTypeId == 1) {
			recruiterProfileRepository.save(new RecruiterProfile(users));
		}
		else {
			jobSeekerRepository.save(new JobSeekerProfile(users));
		}
		return users;
	}
	
	public Optional<Users> getUserByEmail(String email) {
		return usersRepository.findByEmail(email);
	}
}
